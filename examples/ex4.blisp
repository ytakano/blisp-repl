(data (Maybe t)
    (Just t)
    Nothing)

(export car (x) (Pure (-> ('(Int)) (Maybe Int)))
    (match x
        ((Cons n _) (Just n))
        (_ Nothing)))

(export cdr (x) (Pure (-> ('(Int)) '(Int)))
    (match x
        ((Cons _ l) l)
        (_ '())))

(export last (x) (Pure (-> ('(Int)) (Maybe Int)))
    (match x
        (Nil Nothing)
        ((Cons n Nil) (Just n))
        ((Cons _ l) (last l))))
